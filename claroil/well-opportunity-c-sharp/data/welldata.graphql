"""
Autogenerated input for adding instance of InterventionConstraint
"""
input AddInterventionConstraintInput {
  """
  id
  """
  id: ID
  well: String
  wellInterventionType: String
  interventionCurrencyCost: Int
  interventionManHourCost: Int
  oilRateIncreasePercent: Int
  testCurrencyCost: Int
  testManHourCost: Int
  probabilityOfAnomalcyPercent: Int
}

"""
Autogenerated input for adding instance of MeasuredMetric
"""
input AddMeasuredMetricInput {
  """
  id
  """
  id: ID
  dayOfProduction: Int
  oilRate: Float
  waterCut: Float
  GOR: Float
  waterRate: Float
  liquidRate: Float
  gasRate: Float
  well: String
  v1: Float
  v2: Float
}

"""
Autogenerated input for adding instance of PredictedMetric
"""
input AddPredictedMetricInput {
  """
  id
  """
  id: ID
  dayOfProduction: Int
  oilRate: Float
  waterCut: Float
  GOR: Float
  waterRate: Float
  liquidRate: Float
  gasRate: Float
  well: ID!
}

enum AggregateOp {
  MIN
  MAX
  SUM
  COUNT
}

scalar Date

scalar DateTime

input FieldFilterInput {
  """
  one of the following is required
  """
  fieldId: ID
  fieldName: String
  op: String!
  value: FieldValueInput!
}

input FieldProjectionInput {
  """
  one of the following is required - except in the case of count queries
  """
  fieldId: ID
  fieldName: String

  """
  optional if omitted outer query is used
  """
  alias: String
  op: AggregateOp
}

type FieldValue {
  """
  Types
  """
  ID: ID
  STRING: String
  INT: Int
  FLOAT: Float
  BOOLEAN: Boolean
  DATE: Date
  TIME: Time
  DATETIME: DateTime
  JSON: JSON
  KIND: ID

  """
  List forms
  """
  l_ID: [ID]
  l_STRING: [String]
  l_INT: [Int]
  l_FLOAT: [Float]
  l_BOOLEAN: [Boolean]
  l_DATE: [Date]
  l_TIME: [Time]
  l_DATETIME: [DateTime]
  l_JSON: [JSON]
  l_KIND: [ID]
}

input FieldValueInput {
  """
  Types
  """
  ID: ID
  STRING: String
  INT: Int
  FLOAT: Float
  BOOLEAN: Boolean
  DATE: Date
  TIME: Time
  DATETIME: DateTime
  JSON: JSON
  KIND: ID

  """
  List forms
  """
  l_ID: [ID]
  l_STRING: [String]
  l_INT: [Int]
  l_FLOAT: [Float]
  l_BOOLEAN: [Boolean]
  l_DATE: [Date]
  l_TIME: [Time]
  l_DATETIME: [DateTime]
  l_JSON: [JSON]
  l_KIND: [ID]
}

type Info {
  id: ID!
  name: String!
  description: String
}

type InstanceSet {
  kindId: ID!

  """
  Continuation token
  """
  token: String
  fieldIds: [ID]

  """
  rowKeys: [Int]
  """
  records: [[FieldValue]]
}

type InterventionConstraint {
  """
  id
  """
  id: ID!
  well: String
  wellInterventionType: String
  interventionCurrencyCost: Int
  interventionManHourCost: Int
  oilRateIncreasePercent: Int
  testCurrencyCost: Int
  testManHourCost: Int
  probabilityOfAnomalcyPercent: Int
}

scalar JSON

input KindQueryInput {
  """
  projected kind (one of the following is required)
  """
  kindId: ID
  kindName: String
  serviceId: ID

  """
  optional alias for projection binding
  """
  alias: String

  """
  projected fields
  """
  projection: [FieldProjectionInput]

  """
  distinct Projected result
  """
  distinct: Boolean

  """
  filters (where)
  """
  fieldFilters: [FieldFilterInput]

  """
  conjunction (where)
  """
  and: [KindQueryInput]

  """
  disjunction (where)
  """
  or: [KindQueryInput]

  """
  join (if conjunction or disjunction)
  """
  fromFieldId: ID
  fromFieldName: String
  toFieldId: ID
  toFieldName: String
  take: Int
  token: String
}

type MeasuredMetric {
  """
  id
  """
  id: ID!
  dayOfProduction: Int
  oilRate: Float
  waterCut: Float
  GOR: Float
  waterRate: Float
  liquidRate: Float
  gasRate: Float
  well: String
  v1: Float
  v2: Float
}

type Mutation {
  """
  Autogenerated mutation for adding single instance of MeasuredMetric
  """
  addMeasuredMetric(input: AddMeasuredMetricInput!): ID

  """
  Autogenerated mutation for adding multiple instances of MeasuredMetric
  """
  addMeasuredMetrics(input: [AddMeasuredMetricInput]!): [ID]

  """
  Autogenerated mutation for updating single instance of MeasuredMetric
  """
  updateMeasuredMetric(input: UpdateMeasuredMetricInput!): ID

  """
  Autogenerated mutation for updating multiple instance of MeasuredMetric
  """
  updateMeasuredMetrics(input: [UpdateMeasuredMetricInput]!): [ID]

  """
  Autogenerated mutation for deleting single instance of MeasuredMetric
  """
  deleteMeasuredMetric(id: ID!): MeasuredMetric

  """
  Autogenerated mutation for deleting multiple instance of MeasuredMetric
  """
  deleteMeasuredMetrics(ids: [ID!]): [MeasuredMetric]

  """
  Autogenerated mutation for adding single instance of PredictedMetric
  """
  addPredictedMetric(input: AddPredictedMetricInput!): ID

  """
  Autogenerated mutation for adding multiple instances of PredictedMetric
  """
  addPredictedMetrics(input: [AddPredictedMetricInput]!): [ID]

  """
  Autogenerated mutation for updating single instance of PredictedMetric
  """
  updatePredictedMetric(input: UpdatePredictedMetricInput!): ID

  """
  Autogenerated mutation for updating multiple instance of PredictedMetric
  """
  updatePredictedMetrics(input: [UpdatePredictedMetricInput]!): [ID]

  """
  Autogenerated mutation for deleting single instance of PredictedMetric
  """
  deletePredictedMetric(id: ID!): PredictedMetric

  """
  Autogenerated mutation for deleting multiple instance of PredictedMetric
  """
  deletePredictedMetrics(ids: [ID!]): [PredictedMetric]

  """
  Autogenerated mutation for adding single instance of InterventionConstraint
  """
  addInterventionConstraint(input: AddInterventionConstraintInput!): ID

  """
  Autogenerated mutation for adding multiple instances of InterventionConstraint
  """
  addInterventionConstraints(input: [AddInterventionConstraintInput]!): [ID]

  """
  Autogenerated mutation for updating single instance of InterventionConstraint
  """
  updateInterventionConstraint(input: UpdateInterventionConstraintInput!): ID

  """
  Autogenerated mutation for updating multiple instance of InterventionConstraint
  """
  updateInterventionConstraints(
    input: [UpdateInterventionConstraintInput]!
  ): [ID]

  """
  Autogenerated mutation for deleting single instance of InterventionConstraint
  """
  deleteInterventionConstraint(id: ID!): InterventionConstraint

  """
  Autogenerated mutation for deleting multiple instance of InterventionConstraint
  """
  deleteInterventionConstraints(ids: [ID!]): [InterventionConstraint]
}

type PredictedMetric {
  """
  id
  """
  id: ID!
  dayOfProduction: Int
  oilRate: Float
  waterCut: Float
  GOR: Float
  waterRate: Float
  liquidRate: Float
  gasRate: Float
  well: ID!
}

type Query {
  CKGErrors: [String]

  """
  All instances of MeasuredMetric kind
  """
  allMeasuredMetrics(
    """
    Number of results to return
    """
    take: Int = 1000

    """
    Number of results to skip from the query result. Applied before take
    """
    offset: Int = 0
  ): [MeasuredMetric]

  """
  Get single instance of MeasuredMetric kind by ID
  """
  measuredMetric(id: ID!): MeasuredMetric

  """
  Get list of instance of MeasuredMetric kind by IDs
  """
  measuredMetrics(ids: [ID]!): [MeasuredMetric]

  """
  Get instances of MeasuredMetric kind based on one or more field filters
  """
  measuredMetricFilter(
    filters: [FieldFilterInput]!

    """
    Number of results to return
    """
    take: Int = 1000

    """
    Number of results to skip from the query result. Applied before take
    """
    offset: Int = 0
  ): [MeasuredMetric]

  """
  All instances of PredictedMetric kind
  """
  allPredictedMetrics(
    """
    Number of results to return
    """
    take: Int = 1000

    """
    Number of results to skip from the query result. Applied before take
    """
    offset: Int = 0
  ): [PredictedMetric]

  """
  Get single instance of PredictedMetric kind by ID
  """
  predictedMetric(id: ID!): PredictedMetric

  """
  Get list of instance of PredictedMetric kind by IDs
  """
  predictedMetrics(ids: [ID]!): [PredictedMetric]

  """
  Get instances of PredictedMetric kind based on one or more field filters
  """
  predictedMetricFilter(
    filters: [FieldFilterInput]!

    """
    Number of results to return
    """
    take: Int = 1000

    """
    Number of results to skip from the query result. Applied before take
    """
    offset: Int = 0
  ): [PredictedMetric]

  """
  All instances of InterventionConstraint kind
  """
  allInterventionConstraints(
    """
    Number of results to return
    """
    take: Int = 1000

    """
    Number of results to skip from the query result. Applied before take
    """
    offset: Int = 0
  ): [InterventionConstraint]

  """
  Get single instance of InterventionConstraint kind by ID
  """
  interventionConstraint(id: ID!): InterventionConstraint

  """
  Get list of instance of InterventionConstraint kind by IDs
  """
  interventionConstraints(ids: [ID]!): [InterventionConstraint]

  """
  Get instances of InterventionConstraint kind based on one or more field filters
  """
  interventionConstraintFilter(
    filters: [FieldFilterInput]!

    """
    Number of results to return
    """
    take: Int = 1000

    """
    Number of results to skip from the query result. Applied before take
    """
    offset: Int = 0
  ): [InterventionConstraint]

  """
  Mandatory service manifest.
  """
  info: Info!

  """
  Kind Query
  """
  query(input: KindQueryInput!): InstanceSet
  queryJSON(input: KindQueryInput!): String
}

scalar Time

"""
Autogenerated input for modifying instance of InterventionConstraint
"""
input UpdateInterventionConstraintInput {
  """
  id
  """
  id: ID!
  well: String
  wellInterventionType: String
  interventionCurrencyCost: Int
  interventionManHourCost: Int
  oilRateIncreasePercent: Int
  testCurrencyCost: Int
  testManHourCost: Int
  probabilityOfAnomalcyPercent: Int
}

"""
Autogenerated input for modifying instance of MeasuredMetric
"""
input UpdateMeasuredMetricInput {
  """
  id
  """
  id: ID!
  dayOfProduction: Int
  oilRate: Float
  waterCut: Float
  GOR: Float
  waterRate: Float
  liquidRate: Float
  gasRate: Float
  well: String
  v1: Float
  v2: Float
}

"""
Autogenerated input for modifying instance of PredictedMetric
"""
input UpdatePredictedMetricInput {
  """
  id
  """
  id: ID!
  dayOfProduction: Int
  oilRate: Float
  waterCut: Float
  GOR: Float
  waterRate: Float
  liquidRate: Float
  gasRate: Float
  well: ID
}
