# source: https://cstraining01.knowledge.maana.io:8443/service/c3e896d4-dce5-4682-b3f8-57b9b0d9e459/graphql
# timestamp: Tue Apr 09 2019 08:34:49 GMT+0300 (Arabian Standard Time)

type Action {
  """id"""
  id: ID!
  name: String!
  type: String!
}

input ActionAsInput {
  id: ID!
  name: String!
  type: String!
}

type ActionFinancialEstimate {
  """id"""
  id: ID!
  action: Action!
  well: Well!
  impact: Float!
  cost: Float!
  manHours: Float!
}

input ActionFinancialEstimateAsInput {
  id: ID!
  action: ActionAsInput!
  well: WellAsInput!
  impact: Float!
  cost: Float!
  manHours: Float!
}

type ActionOutcome {
  """id"""
  id: ID!
  action: Action!
  well: Well!
  probabilityOfAnomaly: Float!
  cost: Float!
  manHours: Float!
  increaseInOilRate: Float!
}

input ActionOutcomeAsInput {
  id: ID!
  action: ActionAsInput!
  well: WellAsInput!
  probabilityOfAnomaly: Float!
  cost: Float!
  manHours: Float!
  increaseInOilRate: Float!
}

type ActionOutcomeOutput {
  id: ID!
  action: Action!
  well: WellOutput!
  probabilityOfAnomaly: Float!
  cost: Float!
  manHours: Float!
  increaseInOilRate: Float!
}

"""Autogenerated input for adding instance of ActionFinancialEstimate"""
input AddActionFinancialEstimateInput {
  """id"""
  id: ID
  action: ID!
  well: ID!
  impact: Float!
  cost: Float!
  manHours: Float!
}

"""Autogenerated input for adding instance of Action"""
input AddActionInput {
  """id"""
  id: ID
  name: String!
  type: String!
}

"""Autogenerated input for adding instance of ActionOutcome"""
input AddActionOutcomeInput {
  """id"""
  id: ID
  action: ID!
  well: ID!
  probabilityOfAnomaly: Float!
  cost: Float!
  manHours: Float!
  increaseInOilRate: Float!
}

"""Autogenerated input for adding instance of Constraint"""
input AddConstraintInput {
  """id"""
  id: ID
  budget: Float!
  manHours: Float!
}

"""Autogenerated input for adding instance of Metrics"""
input AddMetricsInput {
  """id"""
  id: ID
  well: ID!
  date: Int!
  type: String!
  waterCut: Float!
  GOR: Float!
  oilRate: Float!
}

"""Autogenerated input for adding instance of Opportunity"""
input AddOpportunityInput {
  """id"""
  id: ID
  name: String!
  createdAt: DateTime!
  actions: [ID]!
  incrementalRevenue: Float!
  costReduction: Float!
  cost: Float!
  well: ID!
  manHours: Float!
}

"""Autogenerated input for adding instance of Well"""
input AddWellInput {
  """id"""
  id: ID
  name: String!
}

enum AggregateOp {
  MIN
  MAX
  SUM
  COUNT
}

type Constraint {
  """id"""
  id: ID!
  budget: Float!
  manHours: Float!
}

input ConstraintAsInput {
  id: ID!
  budget: Float!
  manHours: Float!
}

scalar Date

scalar DateTime

input FieldFilterInput {
  """one of the following is required"""
  fieldId: ID
  fieldName: String
  op: String!
  value: FieldValueInput!
}

input FieldProjectionInput {
  """one of the following is required - except in the case of count queries"""
  fieldId: ID
  fieldName: String

  """optional if omitted outer query is used"""
  alias: String
  op: AggregateOp
}

type FieldValue {
  """Types"""
  ID: ID
  STRING: String
  INT: Int
  FLOAT: Float
  BOOLEAN: Boolean
  DATE: Date
  TIME: Time
  DATETIME: DateTime
  JSON: JSON
  KIND: ID

  """List forms"""
  l_ID: [ID]
  l_STRING: [String]
  l_INT: [Int]
  l_FLOAT: [Float]
  l_BOOLEAN: [Boolean]
  l_DATE: [Date]
  l_TIME: [Time]
  l_DATETIME: [DateTime]
  l_JSON: [JSON]
  l_KIND: [ID]
}

input FieldValueInput {
  """Types"""
  ID: ID
  STRING: String
  INT: Int
  FLOAT: Float
  BOOLEAN: Boolean
  DATE: Date
  TIME: Time
  DATETIME: DateTime
  JSON: JSON
  KIND: ID

  """List forms"""
  l_ID: [ID]
  l_STRING: [String]
  l_INT: [Int]
  l_FLOAT: [Float]
  l_BOOLEAN: [Boolean]
  l_DATE: [Date]
  l_TIME: [Time]
  l_DATETIME: [DateTime]
  l_JSON: [JSON]
  l_KIND: [ID]
}

type Info {
  id: ID!
  name: String!
  description: String
}

type InstanceSet {
  kindId: ID!

  """Continuation token"""
  token: String
  fieldIds: [ID]

  """rowKeys: [Int]"""
  records: [[FieldValue]]
}

scalar JSON

input KindQueryInput {
  """projected kind (one of the following is required)"""
  kindId: ID
  kindName: String
  serviceId: ID

  """optional alias for projection binding"""
  alias: String

  """projected fields"""
  projection: [FieldProjectionInput]

  """distinct Projected result"""
  distinct: Boolean

  """filters (where)"""
  fieldFilters: [FieldFilterInput]

  """conjunction (where)"""
  and: [KindQueryInput]

  """disjunction (where)"""
  or: [KindQueryInput]

  """join (if conjunction or disjunction)"""
  fromFieldId: ID
  fromFieldName: String
  toFieldId: ID
  toFieldName: String
  take: Int
  token: String
}

type Metrics {
  """id"""
  id: ID!
  well: Well!
  date: Int!
  type: String!
  waterCut: Float!
  GOR: Float!
  oilRate: Float!
}

input MetricsAsInput {
  id: ID!
  well: WellAsInput!
  date: Int!
  type: String!
  waterCut: Float!
  GOR: Float!
  oilRate: Float!
}

type Mutation {
  """Autogenerated mutation for adding single instance of Well"""
  addWell(input: AddWellInput!): ID

  """Autogenerated mutation for adding multiple instances of Well"""
  addWells(input: [AddWellInput]!): [ID]

  """Autogenerated mutation for updating single instance of Well"""
  updateWell(input: UpdateWellInput!): ID

  """Autogenerated mutation for updating multiple instance of Well"""
  updateWells(input: [UpdateWellInput]!): [ID]

  """Autogenerated mutation for deleting single instance of Well"""
  deleteWell(id: ID!): Well

  """Autogenerated mutation for deleting multiple instance of Well"""
  deleteWells(ids: [ID!]): [Well]

  """
  Autogenerated mutation for adding single instance of ActionFinancialEstimate
  """
  addActionFinancialEstimate(input: AddActionFinancialEstimateInput!): ID

  """
  Autogenerated mutation for adding multiple instances of ActionFinancialEstimate
  """
  addActionFinancialEstimates(input: [AddActionFinancialEstimateInput]!): [ID]

  """
  Autogenerated mutation for updating single instance of ActionFinancialEstimate
  """
  updateActionFinancialEstimate(input: UpdateActionFinancialEstimateInput!): ID

  """
  Autogenerated mutation for updating multiple instance of ActionFinancialEstimate
  """
  updateActionFinancialEstimates(input: [UpdateActionFinancialEstimateInput]!): [ID]

  """
  Autogenerated mutation for deleting single instance of ActionFinancialEstimate
  """
  deleteActionFinancialEstimate(id: ID!): ActionFinancialEstimate

  """
  Autogenerated mutation for deleting multiple instance of ActionFinancialEstimate
  """
  deleteActionFinancialEstimates(ids: [ID!]): [ActionFinancialEstimate]

  """Autogenerated mutation for adding single instance of Opportunity"""
  addOpportunity(input: AddOpportunityInput!): ID

  """Autogenerated mutation for adding multiple instances of Opportunity"""
  addOpportunitys(input: [AddOpportunityInput]!): [ID]

  """Autogenerated mutation for updating single instance of Opportunity"""
  updateOpportunity(input: UpdateOpportunityInput!): ID

  """Autogenerated mutation for updating multiple instance of Opportunity"""
  updateOpportunitys(input: [UpdateOpportunityInput]!): [ID]

  """Autogenerated mutation for deleting single instance of Opportunity"""
  deleteOpportunity(id: ID!): Opportunity

  """Autogenerated mutation for deleting multiple instance of Opportunity"""
  deleteOpportunitys(ids: [ID!]): [Opportunity]

  """Autogenerated mutation for adding single instance of ActionOutcome"""
  addActionOutcome(input: AddActionOutcomeInput!): ID

  """Autogenerated mutation for adding multiple instances of ActionOutcome"""
  addActionOutcomes(input: [AddActionOutcomeInput]!): [ID]

  """Autogenerated mutation for updating single instance of ActionOutcome"""
  updateActionOutcome(input: UpdateActionOutcomeInput!): ID

  """Autogenerated mutation for updating multiple instance of ActionOutcome"""
  updateActionOutcomes(input: [UpdateActionOutcomeInput]!): [ID]

  """Autogenerated mutation for deleting single instance of ActionOutcome"""
  deleteActionOutcome(id: ID!): ActionOutcome

  """Autogenerated mutation for deleting multiple instance of ActionOutcome"""
  deleteActionOutcomes(ids: [ID!]): [ActionOutcome]

  """Autogenerated mutation for adding single instance of Action"""
  addAction(input: AddActionInput!): ID

  """Autogenerated mutation for adding multiple instances of Action"""
  addActions(input: [AddActionInput]!): [ID]

  """Autogenerated mutation for updating single instance of Action"""
  updateAction(input: UpdateActionInput!): ID

  """Autogenerated mutation for updating multiple instance of Action"""
  updateActions(input: [UpdateActionInput]!): [ID]

  """Autogenerated mutation for deleting single instance of Action"""
  deleteAction(id: ID!): Action

  """Autogenerated mutation for deleting multiple instance of Action"""
  deleteActions(ids: [ID!]): [Action]

  """Autogenerated mutation for adding single instance of Metrics"""
  addMetrics(input: AddMetricsInput!): ID

  """Autogenerated mutation for adding multiple instances of Metrics"""
  addMetricss(input: [AddMetricsInput]!): [ID]

  """Autogenerated mutation for updating single instance of Metrics"""
  updateMetrics(input: UpdateMetricsInput!): ID

  """Autogenerated mutation for updating multiple instance of Metrics"""
  updateMetricss(input: [UpdateMetricsInput]!): [ID]

  """Autogenerated mutation for deleting single instance of Metrics"""
  deleteMetrics(id: ID!): Metrics

  """Autogenerated mutation for deleting multiple instance of Metrics"""
  deleteMetricss(ids: [ID!]): [Metrics]

  """Autogenerated mutation for adding single instance of Constraint"""
  addConstraint(input: AddConstraintInput!): ID

  """Autogenerated mutation for adding multiple instances of Constraint"""
  addConstraints(input: [AddConstraintInput]!): [ID]

  """Autogenerated mutation for updating single instance of Constraint"""
  updateConstraint(input: UpdateConstraintInput!): ID

  """Autogenerated mutation for updating multiple instance of Constraint"""
  updateConstraints(input: [UpdateConstraintInput]!): [ID]

  """Autogenerated mutation for deleting single instance of Constraint"""
  deleteConstraint(id: ID!): Constraint

  """Autogenerated mutation for deleting multiple instance of Constraint"""
  deleteConstraints(ids: [ID!]): [Constraint]
}

type Opportunity {
  """id"""
  id: ID!
  name: String!
  createdAt: DateTime!
  actions: [Action]!
  incrementalRevenue: Float!
  costReduction: Float!
  cost: Float!
  well: Well!
  manHours: Float!
}

input OpportunityAsInput {
  id: ID!
  name: String!
  createdAt: DateTime!
  actions: [ActionAsInput!]!
  incrementalRevenue: Float!
  costReduction: Float!
  cost: Float!
  well: WellAsInput!
  manHours: Float!
}

type Query {
  applyConstraint(opportunities: [OpportunityAsInput!]!, constraint: ConstraintAsInput!): [Opportunity!]!
  wellPredictedMetricsByDate(well: WellAsInput!, date: Int!): Metrics!
  discoverAllWellOpportunities(wells: [WellAsInput!]!): [Opportunity!]!
  estimateSkippableTestImpact(oilPrice: Float!, measuredMetrics: MetricsAsInput!, actionOutcome: ActionOutcomeAsInput!): [ActionFinancialEstimate!]!
  wellMeasuredMetricsByDate(well: WellAsInput!, date: Int!): Metrics!
  discoverWellRevenueGains(well: WellAsInput!): [ActionFinancialEstimate!]!
  wellMeasuredMetrics(well: WellAsInput!): Metrics!
  getOilPrice: Float!
  wellHealthIndex(predictedMetrics: MetricsAsInput!, measuredMetrics: MetricsAsInput!): Float!
  discoverIntervention(measuredMetrics: MetricsAsInput!, predictedMetrics: MetricsAsInput!): Action!
  estimateInterventionImpact(oilPrice: Float!, measuredMetrics: MetricsAsInput!, actionOutcome: ActionOutcomeAsInput!): [ActionFinancialEstimate!]!
  givenConstraintWhatAreOpportunities(constraint: ConstraintAsInput!): [Opportunity!]!
  discoverWellCostReduction(well: WellAsInput!): [ActionFinancialEstimate!]!
  wellLastTestDate(well: WellAsInput!, today: Int!): Int!
  allActiveWells: [WellOutput!]!
  discoverWellOpportunities(well: WellAsInput!): Opportunity!
  todayDate: Int!
  recommendOpportunities(wells: [WellAsInput!]!, constraint: ConstraintAsInput!): [Opportunity!]!
  combineActionsImpacts(costReductions: [ActionFinancialEstimateAsInput!]!, revenueGains: [ActionFinancialEstimateAsInput!]!, well: WellAsInput!): Opportunity!
  wellPredictedMetrics(well: WellAsInput!): Metrics!
  discoverSkippableTest(measuredMetrics: MetricsAsInput!, predictedMetrics: MetricsAsInput!, well: WellAsInput!): Action!
  wellActionOutcome(well: WellAsInput!, action: ActionAsInput!): ActionOutcomeOutput!
  skippableTest(healthIndex: Float!, lastTestDate: Int!, todayDate: Int!): Action!
  CKGErrors: [String]

  """All instances of Well kind"""
  allWells(
    """Number of results to return"""
    take: Int = 1000

    """Number of results to skip from the query result. Applied before take"""
    offset: Int = 0
  ): [Well]

  """Get single instance of Well kind by ID"""
  well(id: ID!): Well

  """Get list of instance of Well kind by IDs"""
  wells(ids: [ID]!): [Well]

  """Get instances of Well kind based on one or more field filters"""
  wellFilter(
    filters: [FieldFilterInput]!

    """Number of results to return"""
    take: Int = 1000

    """Number of results to skip from the query result. Applied before take"""
    offset: Int = 0
  ): [Well]

  """All instances of ActionFinancialEstimate kind"""
  allActionFinancialEstimates(
    """Number of results to return"""
    take: Int = 1000

    """Number of results to skip from the query result. Applied before take"""
    offset: Int = 0
  ): [ActionFinancialEstimate]

  """Get single instance of ActionFinancialEstimate kind by ID"""
  actionFinancialEstimate(id: ID!): ActionFinancialEstimate

  """Get list of instance of ActionFinancialEstimate kind by IDs"""
  actionFinancialEstimates(ids: [ID]!): [ActionFinancialEstimate]

  """
  Get instances of ActionFinancialEstimate kind based on one or more field filters
  """
  actionFinancialEstimateFilter(
    filters: [FieldFilterInput]!

    """Number of results to return"""
    take: Int = 1000

    """Number of results to skip from the query result. Applied before take"""
    offset: Int = 0
  ): [ActionFinancialEstimate]

  """All instances of Opportunity kind"""
  allOpportunitys(
    """Number of results to return"""
    take: Int = 1000

    """Number of results to skip from the query result. Applied before take"""
    offset: Int = 0
  ): [Opportunity]

  """Get single instance of Opportunity kind by ID"""
  opportunity(id: ID!): Opportunity

  """Get list of instance of Opportunity kind by IDs"""
  opportunitys(ids: [ID]!): [Opportunity]

  """Get instances of Opportunity kind based on one or more field filters"""
  opportunityFilter(
    filters: [FieldFilterInput]!

    """Number of results to return"""
    take: Int = 1000

    """Number of results to skip from the query result. Applied before take"""
    offset: Int = 0
  ): [Opportunity]

  """All instances of ActionOutcome kind"""
  allActionOutcomes(
    """Number of results to return"""
    take: Int = 1000

    """Number of results to skip from the query result. Applied before take"""
    offset: Int = 0
  ): [ActionOutcome]

  """Get single instance of ActionOutcome kind by ID"""
  actionOutcome(id: ID!): ActionOutcome

  """Get list of instance of ActionOutcome kind by IDs"""
  actionOutcomes(ids: [ID]!): [ActionOutcome]

  """Get instances of ActionOutcome kind based on one or more field filters"""
  actionOutcomeFilter(
    filters: [FieldFilterInput]!

    """Number of results to return"""
    take: Int = 1000

    """Number of results to skip from the query result. Applied before take"""
    offset: Int = 0
  ): [ActionOutcome]

  """All instances of Action kind"""
  allActions(
    """Number of results to return"""
    take: Int = 1000

    """Number of results to skip from the query result. Applied before take"""
    offset: Int = 0
  ): [Action]

  """Get single instance of Action kind by ID"""
  action(id: ID!): Action

  """Get list of instance of Action kind by IDs"""
  actions(ids: [ID]!): [Action]

  """Get instances of Action kind based on one or more field filters"""
  actionFilter(
    filters: [FieldFilterInput]!

    """Number of results to return"""
    take: Int = 1000

    """Number of results to skip from the query result. Applied before take"""
    offset: Int = 0
  ): [Action]

  """All instances of Metrics kind"""
  allMetricss(
    """Number of results to return"""
    take: Int = 1000

    """Number of results to skip from the query result. Applied before take"""
    offset: Int = 0
  ): [Metrics]

  """Get single instance of Metrics kind by ID"""
  metrics(id: ID!): Metrics

  """Get list of instance of Metrics kind by IDs"""
  metricss(ids: [ID]!): [Metrics]

  """Get instances of Metrics kind based on one or more field filters"""
  metricsFilter(
    filters: [FieldFilterInput]!

    """Number of results to return"""
    take: Int = 1000

    """Number of results to skip from the query result. Applied before take"""
    offset: Int = 0
  ): [Metrics]

  """All instances of Constraint kind"""
  allConstraints(
    """Number of results to return"""
    take: Int = 1000

    """Number of results to skip from the query result. Applied before take"""
    offset: Int = 0
  ): [Constraint]

  """Get single instance of Constraint kind by ID"""
  constraint(id: ID!): Constraint

  """Get list of instance of Constraint kind by IDs"""
  constraints(ids: [ID]!): [Constraint]

  """Get instances of Constraint kind based on one or more field filters"""
  constraintFilter(
    filters: [FieldFilterInput]!

    """Number of results to return"""
    take: Int = 1000

    """Number of results to skip from the query result. Applied before take"""
    offset: Int = 0
  ): [Constraint]

  """Mandatory service manifest."""
  info: Info!

  """Kind Query"""
  query(input: KindQueryInput!): InstanceSet
  queryJSON(input: KindQueryInput!): String
}

scalar Time

"""Autogenerated input for modifying instance of ActionFinancialEstimate"""
input UpdateActionFinancialEstimateInput {
  """id"""
  id: ID!
  action: ID
  well: ID
  impact: Float
  cost: Float
  manHours: Float
}

"""Autogenerated input for modifying instance of Action"""
input UpdateActionInput {
  """id"""
  id: ID!
  name: String
  type: String
}

"""Autogenerated input for modifying instance of ActionOutcome"""
input UpdateActionOutcomeInput {
  """id"""
  id: ID!
  action: ID
  well: ID
  probabilityOfAnomaly: Float
  cost: Float
  manHours: Float
  increaseInOilRate: Float
}

"""Autogenerated input for modifying instance of Constraint"""
input UpdateConstraintInput {
  """id"""
  id: ID!
  budget: Float
  manHours: Float
}

"""Autogenerated input for modifying instance of Metrics"""
input UpdateMetricsInput {
  """id"""
  id: ID!
  well: ID
  date: Int
  type: String
  waterCut: Float
  GOR: Float
  oilRate: Float
}

"""Autogenerated input for modifying instance of Opportunity"""
input UpdateOpportunityInput {
  """id"""
  id: ID!
  name: String
  createdAt: DateTime
  actions: [ID]
  incrementalRevenue: Float
  costReduction: Float
  cost: Float
  well: ID
  manHours: Float
}

"""Autogenerated input for modifying instance of Well"""
input UpdateWellInput {
  """id"""
  id: ID!
  name: String
}

type Well {
  """id"""
  id: ID!
  name: String!
}

input WellAsInput {
  id: ID!
  name: String!
}

type WellOutput {
  id: ID!
  name: String!
}
