# source: https://cstraining01.knowledge.maana.io:8443/service/4541f11d-6d59-4281-8e68-86eb2c96d780/graphql
# timestamp: Sat Apr 13 2019 07:40:28 GMT+0300 (Arabian Standard Time)

"""Autogenerated input for adding instance of Features"""
input AddFeaturesInput {
  """id"""
  id: ID
  taskType: String!
  speedK: Float!
  durationMins: Int!
  loadMT: Float!
  bunkerConsumptionMT: Float!
}

"""Autogenerated input for adding instance of Location"""
input AddLocationInput {
  """id"""
  id: ID
  lat: Float!
  lon: Float!
}

"""Autogenerated input for adding instance of Model"""
input AddModelInput {
  """id"""
  id: ID
  speedK: Float!
  durationMins: Int!
  loadMT: Float!
}

"""Autogenerated input for adding instance of Port"""
input AddPortInput {
  """id"""
  id: ID
  draftM: Float!
  latitude: Float!
  longitude: Float!
}

"""Autogenerated input for adding instance of Schedule"""
input AddScheduleInput {
  """id"""
  id: ID
  vessel: ID!
  tasks: [String]!
}

"""Autogenerated input for adding instance of Shipment"""
input AddShipmentInput {
  """id"""
  id: ID
  product: String!
  loadingDate: Date!
  loadingPort: ID!
  dischargeDate: Date!
  dischargePort: ID!
  quantityMT: Float!
}

"""Autogenerated input for adding instance of VesselCost"""
input AddVesselCostInput {
  """id"""
  id: ID
  vessel: ID!
  cost: Float!
}

"""Autogenerated input for adding instance of VesselDestination"""
input AddVesselDestinationInput {
  """id"""
  id: ID
  vessel: ID!
  port: ID!
  arrivalDate: Date!
}

"""Autogenerated input for adding instance of Vessel"""
input AddVesselInput {
  """id"""
  id: ID
  capacityMT: Float!
  maxSpeedK: Float!
  unloadedDraftM: Float!
  draftLoadCoef: Float!
}

"""Autogenerated input for adding instance of VesselROB"""
input AddVesselROBInput {
  """id"""
  id: ID
  vessel: ID!
  ROB: Float!
}

"""Autogenerated input for adding instance of VesselStatusUpdate"""
input AddVesselStatusUpdateInput {
  """id"""
  id: ID
  vessel: ID!
  dateTime: DateTime!
  speedK: Float!
  ROB: Float!
  draftM: Float!
  latitude: Float!
  longitude: Float!
}

enum AggregateOp {
  MIN
  MAX
  SUM
  COUNT
}

scalar Date

scalar DateTime

type Features {
  """id"""
  id: ID!
  taskType: String!
  speedK: Float!
  durationMins: Int!
  loadMT: Float!
  bunkerConsumptionMT: Float!
}

input FieldFilterInput {
  """one of the following is required"""
  fieldId: ID
  fieldName: String
  op: String!
  value: FieldValueInput!
}

input FieldProjectionInput {
  """one of the following is required - except in the case of count queries"""
  fieldId: ID
  fieldName: String

  """optional if omitted outer query is used"""
  alias: String
  op: AggregateOp
}

type FieldValue {
  """Types"""
  ID: ID
  STRING: String
  INT: Int
  FLOAT: Float
  BOOLEAN: Boolean
  DATE: Date
  TIME: Time
  DATETIME: DateTime
  JSON: JSON
  KIND: ID

  """List forms"""
  l_ID: [ID]
  l_STRING: [String]
  l_INT: [Int]
  l_FLOAT: [Float]
  l_BOOLEAN: [Boolean]
  l_DATE: [Date]
  l_TIME: [Time]
  l_DATETIME: [DateTime]
  l_JSON: [JSON]
  l_KIND: [ID]
}

input FieldValueInput {
  """Types"""
  ID: ID
  STRING: String
  INT: Int
  FLOAT: Float
  BOOLEAN: Boolean
  DATE: Date
  TIME: Time
  DATETIME: DateTime
  JSON: JSON
  KIND: ID

  """List forms"""
  l_ID: [ID]
  l_STRING: [String]
  l_INT: [Int]
  l_FLOAT: [Float]
  l_BOOLEAN: [Boolean]
  l_DATE: [Date]
  l_TIME: [Time]
  l_DATETIME: [DateTime]
  l_JSON: [JSON]
  l_KIND: [ID]
}

type Info {
  id: ID!
  name: String!
  description: String
}

type InstanceSet {
  kindId: ID!

  """Continuation token"""
  token: String
  fieldIds: [ID]

  """rowKeys: [Int]"""
  records: [[FieldValue]]
}

scalar JSON

input KindQueryInput {
  """projected kind (one of the following is required)"""
  kindId: ID
  kindName: String
  serviceId: ID

  """optional alias for projection binding"""
  alias: String

  """projected fields"""
  projection: [FieldProjectionInput]

  """distinct Projected result"""
  distinct: Boolean

  """filters (where)"""
  fieldFilters: [FieldFilterInput]

  """conjunction (where)"""
  and: [KindQueryInput]

  """disjunction (where)"""
  or: [KindQueryInput]

  """join (if conjunction or disjunction)"""
  fromFieldId: ID
  fromFieldName: String
  toFieldId: ID
  toFieldName: String
  take: Int
  token: String
}

type Location {
  """id"""
  id: ID!
  lat: Float!
  lon: Float!
}

type Model {
  """id"""
  id: ID!
  speedK: Float!
  durationMins: Int!
  loadMT: Float!
}

type Mutation {
  """Autogenerated mutation for adding single instance of Location"""
  addLocation(input: AddLocationInput!): ID

  """Autogenerated mutation for adding multiple instances of Location"""
  addLocations(input: [AddLocationInput]!): [ID]

  """Autogenerated mutation for updating single instance of Location"""
  updateLocation(input: UpdateLocationInput!): ID

  """Autogenerated mutation for updating multiple instance of Location"""
  updateLocations(input: [UpdateLocationInput]!): [ID]

  """Autogenerated mutation for deleting single instance of Location"""
  deleteLocation(id: ID!): Location

  """Autogenerated mutation for deleting multiple instance of Location"""
  deleteLocations(ids: [ID!]): [Location]

  """Autogenerated mutation for adding single instance of VesselROB"""
  addVesselROB(input: AddVesselROBInput!): ID

  """Autogenerated mutation for adding multiple instances of VesselROB"""
  addVesselROBs(input: [AddVesselROBInput]!): [ID]

  """Autogenerated mutation for updating single instance of VesselROB"""
  updateVesselROB(input: UpdateVesselROBInput!): ID

  """Autogenerated mutation for updating multiple instance of VesselROB"""
  updateVesselROBs(input: [UpdateVesselROBInput]!): [ID]

  """Autogenerated mutation for deleting single instance of VesselROB"""
  deleteVesselROB(id: ID!): VesselROB

  """Autogenerated mutation for deleting multiple instance of VesselROB"""
  deleteVesselROBs(ids: [ID!]): [VesselROB]

  """Autogenerated mutation for adding single instance of Model"""
  addModel(input: AddModelInput!): ID

  """Autogenerated mutation for adding multiple instances of Model"""
  addModels(input: [AddModelInput]!): [ID]

  """Autogenerated mutation for updating single instance of Model"""
  updateModel(input: UpdateModelInput!): ID

  """Autogenerated mutation for updating multiple instance of Model"""
  updateModels(input: [UpdateModelInput]!): [ID]

  """Autogenerated mutation for deleting single instance of Model"""
  deleteModel(id: ID!): Model

  """Autogenerated mutation for deleting multiple instance of Model"""
  deleteModels(ids: [ID!]): [Model]

  """
  Autogenerated mutation for adding single instance of VesselStatusUpdate
  """
  addVesselStatusUpdate(input: AddVesselStatusUpdateInput!): ID

  """
  Autogenerated mutation for adding multiple instances of VesselStatusUpdate
  """
  addVesselStatusUpdates(input: [AddVesselStatusUpdateInput]!): [ID]

  """
  Autogenerated mutation for updating single instance of VesselStatusUpdate
  """
  updateVesselStatusUpdate(input: UpdateVesselStatusUpdateInput!): ID

  """
  Autogenerated mutation for updating multiple instance of VesselStatusUpdate
  """
  updateVesselStatusUpdates(input: [UpdateVesselStatusUpdateInput]!): [ID]

  """
  Autogenerated mutation for deleting single instance of VesselStatusUpdate
  """
  deleteVesselStatusUpdate(id: ID!): VesselStatusUpdate

  """
  Autogenerated mutation for deleting multiple instance of VesselStatusUpdate
  """
  deleteVesselStatusUpdates(ids: [ID!]): [VesselStatusUpdate]

  """Autogenerated mutation for adding single instance of Shipment"""
  addShipment(input: AddShipmentInput!): ID

  """Autogenerated mutation for adding multiple instances of Shipment"""
  addShipments(input: [AddShipmentInput]!): [ID]

  """Autogenerated mutation for updating single instance of Shipment"""
  updateShipment(input: UpdateShipmentInput!): ID

  """Autogenerated mutation for updating multiple instance of Shipment"""
  updateShipments(input: [UpdateShipmentInput]!): [ID]

  """Autogenerated mutation for deleting single instance of Shipment"""
  deleteShipment(id: ID!): Shipment

  """Autogenerated mutation for deleting multiple instance of Shipment"""
  deleteShipments(ids: [ID!]): [Shipment]

  """Autogenerated mutation for adding single instance of VesselDestination"""
  addVesselDestination(input: AddVesselDestinationInput!): ID

  """
  Autogenerated mutation for adding multiple instances of VesselDestination
  """
  addVesselDestinations(input: [AddVesselDestinationInput]!): [ID]

  """
  Autogenerated mutation for updating single instance of VesselDestination
  """
  updateVesselDestination(input: UpdateVesselDestinationInput!): ID

  """
  Autogenerated mutation for updating multiple instance of VesselDestination
  """
  updateVesselDestinations(input: [UpdateVesselDestinationInput]!): [ID]

  """
  Autogenerated mutation for deleting single instance of VesselDestination
  """
  deleteVesselDestination(id: ID!): VesselDestination

  """
  Autogenerated mutation for deleting multiple instance of VesselDestination
  """
  deleteVesselDestinations(ids: [ID!]): [VesselDestination]

  """Autogenerated mutation for adding single instance of Features"""
  addFeatures(input: AddFeaturesInput!): ID

  """Autogenerated mutation for adding multiple instances of Features"""
  addFeaturess(input: [AddFeaturesInput]!): [ID]

  """Autogenerated mutation for updating single instance of Features"""
  updateFeatures(input: UpdateFeaturesInput!): ID

  """Autogenerated mutation for updating multiple instance of Features"""
  updateFeaturess(input: [UpdateFeaturesInput]!): [ID]

  """Autogenerated mutation for deleting single instance of Features"""
  deleteFeatures(id: ID!): Features

  """Autogenerated mutation for deleting multiple instance of Features"""
  deleteFeaturess(ids: [ID!]): [Features]

  """Autogenerated mutation for adding single instance of Schedule"""
  addSchedule(input: AddScheduleInput!): ID

  """Autogenerated mutation for adding multiple instances of Schedule"""
  addSchedules(input: [AddScheduleInput]!): [ID]

  """Autogenerated mutation for updating single instance of Schedule"""
  updateSchedule(input: UpdateScheduleInput!): ID

  """Autogenerated mutation for updating multiple instance of Schedule"""
  updateSchedules(input: [UpdateScheduleInput]!): [ID]

  """Autogenerated mutation for deleting single instance of Schedule"""
  deleteSchedule(id: ID!): Schedule

  """Autogenerated mutation for deleting multiple instance of Schedule"""
  deleteSchedules(ids: [ID!]): [Schedule]

  """Autogenerated mutation for adding single instance of Vessel"""
  addVessel(input: AddVesselInput!): ID

  """Autogenerated mutation for adding multiple instances of Vessel"""
  addVessels(input: [AddVesselInput]!): [ID]

  """Autogenerated mutation for updating single instance of Vessel"""
  updateVessel(input: UpdateVesselInput!): ID

  """Autogenerated mutation for updating multiple instance of Vessel"""
  updateVessels(input: [UpdateVesselInput]!): [ID]

  """Autogenerated mutation for deleting single instance of Vessel"""
  deleteVessel(id: ID!): Vessel

  """Autogenerated mutation for deleting multiple instance of Vessel"""
  deleteVessels(ids: [ID!]): [Vessel]

  """Autogenerated mutation for adding single instance of Port"""
  addPort(input: AddPortInput!): ID

  """Autogenerated mutation for adding multiple instances of Port"""
  addPorts(input: [AddPortInput]!): [ID]

  """Autogenerated mutation for updating single instance of Port"""
  updatePort(input: UpdatePortInput!): ID

  """Autogenerated mutation for updating multiple instance of Port"""
  updatePorts(input: [UpdatePortInput]!): [ID]

  """Autogenerated mutation for deleting single instance of Port"""
  deletePort(id: ID!): Port

  """Autogenerated mutation for deleting multiple instance of Port"""
  deletePorts(ids: [ID!]): [Port]

  """Autogenerated mutation for adding single instance of VesselCost"""
  addVesselCost(input: AddVesselCostInput!): ID

  """Autogenerated mutation for adding multiple instances of VesselCost"""
  addVesselCosts(input: [AddVesselCostInput]!): [ID]

  """Autogenerated mutation for updating single instance of VesselCost"""
  updateVesselCost(input: UpdateVesselCostInput!): ID

  """Autogenerated mutation for updating multiple instance of VesselCost"""
  updateVesselCosts(input: [UpdateVesselCostInput]!): [ID]

  """Autogenerated mutation for deleting single instance of VesselCost"""
  deleteVesselCost(id: ID!): VesselCost

  """Autogenerated mutation for deleting multiple instance of VesselCost"""
  deleteVesselCosts(ids: [ID!]): [VesselCost]
}

type Port {
  """id"""
  id: ID!
  draftM: Float!
  latitude: Float!
  longitude: Float!
}

input PortAsInput {
  id: ID!
  draftM: Float!
  latitude: Float!
  longitude: Float!
}

type Query {
  vesselShipmentCosts(shipment: ShipmentAsInput!, vessels: [VesselAsInput!]!): [VesselCost!]!
  shipmentQuantity(shipment: ShipmentAsInput!): Float!
  findVesselROB(vessel: VesselAsInput!): VesselROB!
  constrainByDraft(shipment: ShipmentAsInput!, vessels: [VesselROBAsInput!]!): [VesselOutput!]!
  assignShipmentToVesselParallel(shipment: ShipmentAsInput!, vessels: [VesselAsInput!]!): VesselCost!
  assignShipmentToVesselSeries(shipment: ShipmentAsInput!, vessels: [VesselAsInput!]!): VesselCost!
  constrainByCapacity(shipment: ShipmentAsInput!, vessels: [VesselAsInput!]!): [VesselOutput!]!
  shipmentLoadingDate(shipment: ShipmentAsInput!): Date!
  shipmentLoadingPort(shipment: ShipmentAsInput!): Port!
  intersectVessels(a: [VesselAsInput!]!, b: [VesselAsInput!]!, c: [VesselAsInput!]!): [VesselOutput!]!
  selectBestVessel(vesselCosts: [VesselCostAsInput!]!): VesselCost!
  findVesselDestination(vessel: VesselAsInput!): VesselDestination!
  constrainByTime(shipment: ShipmentAsInput!, vesselDestinations: [VesselDestinationAsInput!]!): [VesselOutput!]!
  CKGErrors: [String]

  """All instances of Location kind"""
  allLocations(
    """Number of results to return"""
    take: Int = 1000

    """Number of results to skip from the query result. Applied before take"""
    offset: Int = 0
  ): [Location]

  """Get single instance of Location kind by ID"""
  location(id: ID!): Location

  """Get list of instance of Location kind by IDs"""
  locations(ids: [ID]!): [Location]

  """Get instances of Location kind based on one or more field filters"""
  locationFilter(
    filters: [FieldFilterInput]!

    """Number of results to return"""
    take: Int = 1000

    """Number of results to skip from the query result. Applied before take"""
    offset: Int = 0
  ): [Location]

  """All instances of VesselROB kind"""
  allVesselROBs(
    """Number of results to return"""
    take: Int = 1000

    """Number of results to skip from the query result. Applied before take"""
    offset: Int = 0
  ): [VesselROB]

  """Get single instance of VesselROB kind by ID"""
  vesselROB(id: ID!): VesselROB

  """Get list of instance of VesselROB kind by IDs"""
  vesselROBs(ids: [ID]!): [VesselROB]

  """Get instances of VesselROB kind based on one or more field filters"""
  vesselROBFilter(
    filters: [FieldFilterInput]!

    """Number of results to return"""
    take: Int = 1000

    """Number of results to skip from the query result. Applied before take"""
    offset: Int = 0
  ): [VesselROB]

  """All instances of Model kind"""
  allModels(
    """Number of results to return"""
    take: Int = 1000

    """Number of results to skip from the query result. Applied before take"""
    offset: Int = 0
  ): [Model]

  """Get single instance of Model kind by ID"""
  model(id: ID!): Model

  """Get list of instance of Model kind by IDs"""
  models(ids: [ID]!): [Model]

  """Get instances of Model kind based on one or more field filters"""
  modelFilter(
    filters: [FieldFilterInput]!

    """Number of results to return"""
    take: Int = 1000

    """Number of results to skip from the query result. Applied before take"""
    offset: Int = 0
  ): [Model]

  """All instances of VesselStatusUpdate kind"""
  allVesselStatusUpdates(
    """Number of results to return"""
    take: Int = 1000

    """Number of results to skip from the query result. Applied before take"""
    offset: Int = 0
  ): [VesselStatusUpdate]

  """Get single instance of VesselStatusUpdate kind by ID"""
  vesselStatusUpdate(id: ID!): VesselStatusUpdate

  """Get list of instance of VesselStatusUpdate kind by IDs"""
  vesselStatusUpdates(ids: [ID]!): [VesselStatusUpdate]

  """
  Get instances of VesselStatusUpdate kind based on one or more field filters
  """
  vesselStatusUpdateFilter(
    filters: [FieldFilterInput]!

    """Number of results to return"""
    take: Int = 1000

    """Number of results to skip from the query result. Applied before take"""
    offset: Int = 0
  ): [VesselStatusUpdate]

  """All instances of Shipment kind"""
  allShipments(
    """Number of results to return"""
    take: Int = 1000

    """Number of results to skip from the query result. Applied before take"""
    offset: Int = 0
  ): [Shipment]

  """Get single instance of Shipment kind by ID"""
  shipment(id: ID!): Shipment

  """Get list of instance of Shipment kind by IDs"""
  shipments(ids: [ID]!): [Shipment]

  """Get instances of Shipment kind based on one or more field filters"""
  shipmentFilter(
    filters: [FieldFilterInput]!

    """Number of results to return"""
    take: Int = 1000

    """Number of results to skip from the query result. Applied before take"""
    offset: Int = 0
  ): [Shipment]

  """All instances of VesselDestination kind"""
  allVesselDestinations(
    """Number of results to return"""
    take: Int = 1000

    """Number of results to skip from the query result. Applied before take"""
    offset: Int = 0
  ): [VesselDestination]

  """Get single instance of VesselDestination kind by ID"""
  vesselDestination(id: ID!): VesselDestination

  """Get list of instance of VesselDestination kind by IDs"""
  vesselDestinations(ids: [ID]!): [VesselDestination]

  """
  Get instances of VesselDestination kind based on one or more field filters
  """
  vesselDestinationFilter(
    filters: [FieldFilterInput]!

    """Number of results to return"""
    take: Int = 1000

    """Number of results to skip from the query result. Applied before take"""
    offset: Int = 0
  ): [VesselDestination]

  """All instances of Features kind"""
  allFeaturess(
    """Number of results to return"""
    take: Int = 1000

    """Number of results to skip from the query result. Applied before take"""
    offset: Int = 0
  ): [Features]

  """Get single instance of Features kind by ID"""
  features(id: ID!): Features

  """Get list of instance of Features kind by IDs"""
  featuress(ids: [ID]!): [Features]

  """Get instances of Features kind based on one or more field filters"""
  featuresFilter(
    filters: [FieldFilterInput]!

    """Number of results to return"""
    take: Int = 1000

    """Number of results to skip from the query result. Applied before take"""
    offset: Int = 0
  ): [Features]

  """All instances of Schedule kind"""
  allSchedules(
    """Number of results to return"""
    take: Int = 1000

    """Number of results to skip from the query result. Applied before take"""
    offset: Int = 0
  ): [Schedule]

  """Get single instance of Schedule kind by ID"""
  schedule(id: ID!): Schedule

  """Get list of instance of Schedule kind by IDs"""
  schedules(ids: [ID]!): [Schedule]

  """Get instances of Schedule kind based on one or more field filters"""
  scheduleFilter(
    filters: [FieldFilterInput]!

    """Number of results to return"""
    take: Int = 1000

    """Number of results to skip from the query result. Applied before take"""
    offset: Int = 0
  ): [Schedule]

  """All instances of Vessel kind"""
  allVessels(
    """Number of results to return"""
    take: Int = 1000

    """Number of results to skip from the query result. Applied before take"""
    offset: Int = 0
  ): [Vessel]

  """Get single instance of Vessel kind by ID"""
  vessel(id: ID!): Vessel

  """Get list of instance of Vessel kind by IDs"""
  vessels(ids: [ID]!): [Vessel]

  """Get instances of Vessel kind based on one or more field filters"""
  vesselFilter(
    filters: [FieldFilterInput]!

    """Number of results to return"""
    take: Int = 1000

    """Number of results to skip from the query result. Applied before take"""
    offset: Int = 0
  ): [Vessel]

  """All instances of Port kind"""
  allPorts(
    """Number of results to return"""
    take: Int = 1000

    """Number of results to skip from the query result. Applied before take"""
    offset: Int = 0
  ): [Port]

  """Get single instance of Port kind by ID"""
  port(id: ID!): Port

  """Get list of instance of Port kind by IDs"""
  ports(ids: [ID]!): [Port]

  """Get instances of Port kind based on one or more field filters"""
  portFilter(
    filters: [FieldFilterInput]!

    """Number of results to return"""
    take: Int = 1000

    """Number of results to skip from the query result. Applied before take"""
    offset: Int = 0
  ): [Port]

  """All instances of VesselCost kind"""
  allVesselCosts(
    """Number of results to return"""
    take: Int = 1000

    """Number of results to skip from the query result. Applied before take"""
    offset: Int = 0
  ): [VesselCost]

  """Get single instance of VesselCost kind by ID"""
  vesselCost(id: ID!): VesselCost

  """Get list of instance of VesselCost kind by IDs"""
  vesselCosts(ids: [ID]!): [VesselCost]

  """Get instances of VesselCost kind based on one or more field filters"""
  vesselCostFilter(
    filters: [FieldFilterInput]!

    """Number of results to return"""
    take: Int = 1000

    """Number of results to skip from the query result. Applied before take"""
    offset: Int = 0
  ): [VesselCost]

  """Mandatory service manifest."""
  info: Info!

  """Kind Query"""
  query(input: KindQueryInput!): InstanceSet
  queryJSON(input: KindQueryInput!): String
}

type Schedule {
  """id"""
  id: ID!
  vessel: Vessel!
  tasks: [String]!
}

type Shipment {
  """id"""
  id: ID!
  product: String!
  loadingDate: Date!
  loadingPort: Port!
  dischargeDate: Date!
  dischargePort: Port!
  quantityMT: Float!
}

input ShipmentAsInput {
  id: ID!
  product: String!
  loadingDate: Date!
  loadingPort: PortAsInput!
  dischargeDate: Date!
  dischargePort: PortAsInput!
  quantityMT: Float!
}

scalar Time

"""Autogenerated input for modifying instance of Features"""
input UpdateFeaturesInput {
  """id"""
  id: ID!
  taskType: String
  speedK: Float
  durationMins: Int
  loadMT: Float
  bunkerConsumptionMT: Float
}

"""Autogenerated input for modifying instance of Location"""
input UpdateLocationInput {
  """id"""
  id: ID!
  lat: Float
  lon: Float
}

"""Autogenerated input for modifying instance of Model"""
input UpdateModelInput {
  """id"""
  id: ID!
  speedK: Float
  durationMins: Int
  loadMT: Float
}

"""Autogenerated input for modifying instance of Port"""
input UpdatePortInput {
  """id"""
  id: ID!
  draftM: Float
  latitude: Float
  longitude: Float
}

"""Autogenerated input for modifying instance of Schedule"""
input UpdateScheduleInput {
  """id"""
  id: ID!
  vessel: ID
  tasks: [String]
}

"""Autogenerated input for modifying instance of Shipment"""
input UpdateShipmentInput {
  """id"""
  id: ID!
  product: String
  loadingDate: Date
  loadingPort: ID
  dischargeDate: Date
  dischargePort: ID
  quantityMT: Float
}

"""Autogenerated input for modifying instance of VesselCost"""
input UpdateVesselCostInput {
  """id"""
  id: ID!
  vessel: ID
  cost: Float
}

"""Autogenerated input for modifying instance of VesselDestination"""
input UpdateVesselDestinationInput {
  """id"""
  id: ID!
  vessel: ID
  port: ID
  arrivalDate: Date
}

"""Autogenerated input for modifying instance of Vessel"""
input UpdateVesselInput {
  """id"""
  id: ID!
  capacityMT: Float
  maxSpeedK: Float
  unloadedDraftM: Float
  draftLoadCoef: Float
}

"""Autogenerated input for modifying instance of VesselROB"""
input UpdateVesselROBInput {
  """id"""
  id: ID!
  vessel: ID
  ROB: Float
}

"""Autogenerated input for modifying instance of VesselStatusUpdate"""
input UpdateVesselStatusUpdateInput {
  """id"""
  id: ID!
  vessel: ID
  dateTime: DateTime
  speedK: Float
  ROB: Float
  draftM: Float
  latitude: Float
  longitude: Float
}

type Vessel {
  """id"""
  id: ID!
  capacityMT: Float!
  maxSpeedK: Float!
  unloadedDraftM: Float!
  draftLoadCoef: Float!
}

input VesselAsInput {
  id: ID!
  capacityMT: Float!
  maxSpeedK: Float!
  unloadedDraftM: Float!
  draftLoadCoef: Float!
}

type VesselCost {
  """id"""
  id: ID!
  vessel: Vessel!
  cost: Float!
}

input VesselCostAsInput {
  id: ID!
  vessel: VesselAsInput!
  cost: Float!
}

type VesselDestination {
  """id"""
  id: ID!
  vessel: Vessel!
  port: Port!
  arrivalDate: Date!
}

input VesselDestinationAsInput {
  id: ID!
  vessel: VesselAsInput!
  port: PortAsInput!
  arrivalDate: Date!
}

type VesselOutput {
  id: ID!
  capacityMT: Float!
  maxSpeedK: Float!
  unloadedDraftM: Float!
  draftLoadCoef: Float!
}

type VesselROB {
  """id"""
  id: ID!
  vessel: Vessel!
  ROB: Float!
}

input VesselROBAsInput {
  id: ID!
  vessel: VesselAsInput!
  ROB: Float!
}

type VesselStatusUpdate {
  """id"""
  id: ID!
  vessel: Vessel!
  dateTime: DateTime!
  speedK: Float!
  ROB: Float!
  draftM: Float!
  latitude: Float!
  longitude: Float!
}
